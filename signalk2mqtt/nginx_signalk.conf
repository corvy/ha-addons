server {
    listen 8099 default_server;

    # Regular HTTP traffic
    location / {
        # Redirect all traffic to the entry point /admin/#/dashboard
        rewrite ^/$ /admin/#/dashboard redirect;

        # CORS headers
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Proxy pass to the backend server for regular HTTP traffic
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host localhost;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-External-Path $http_x_ingress_path;
    }

    # WebSocket connections
    location /api/websocket {
        # Rewrite WebSocket URI
        rewrite ^/api/websocket$ /hassio/ingress/local_signalk2mqtt/api/websocket break;

        # Proxy pass to the backend server for WebSocket connections
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host localhost;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-External-Path $http_x_ingress_path;
    }
}
